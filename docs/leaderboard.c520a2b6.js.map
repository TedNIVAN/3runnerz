{"version":3,"sources":["../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/process/browser.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js","../node_modules/dotenv/lib/main.js","../node_modules/jsen/lib/func.js","../node_modules/jsen/lib/equal.js","../node_modules/jsen/lib/unique.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/node-libs-browser/node_modules/punycode/punycode.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/url/util.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/querystring-es3/decode.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/querystring-es3/encode.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/querystring-es3/index.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/url/url.js","../node_modules/jsen/lib/metaschema.json","../node_modules/jsen/lib/resolver.js","../node_modules/jsen/lib/formats.js","../node_modules/jsen/lib/ucs2length.js","../node_modules/jsen/lib/jsen.js","../node_modules/jsen/index.js","js/leaderboard.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","fs","require","path","log","message","console","NEWLINE","RE_INI_KEY_VAL","RE_NEWLINES","NEWLINES_MATCH","parse","src","options","debug","Boolean","obj","toString","split","forEach","line","idx","keyValueArr","match","key","val","end","isDoubleQuoted","isSingleQuoted","substring","replace","trim","config","dotenvPath","resolve","encoding","parsed","readFileSync","Object","keys","hasOwnProperty","error","prop","qs","sep","eq","regexp","maxKeys","x","indexOf","kstr","vstr","k","v","substr","decodeURIComponent","isArray","xs","stringifyPrimitive","isFinite","undefined","map","objectKeys","ks","encodeURIComponent","join","f","res","decode","encode","stringify","jsen","validate","type","minProperties","maxProperties","required","properties","accountId","fullname","country","avatar","additionalProperties","runners","leaderboardComponent","xhr","XMLHttpRequest","runnerz","addEventListener","readyState","JSON","responseText","data","memo","err","table","document","getElementById","row","insertRow","cell1","insertCell","cell2","cell3","cell4","cell5","cell6","cell7","cell8","cell9","innerHTML","open","setRequestHeader","send"],"mappings":"AQAA,ACAA,ACAA,ACAA,AJAA,AUAA,AbAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaAA4D,OAAO,CAAC,QAAD,CAAP,CAAkB8B,MAAlB;AjBAA,ADAA,AQCA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA;ACDA,ALCA,ADAA,AQCA,ACAA,ACAAxF,ACAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaDA,IlBAIF,AkBAAiI,GRCG,CAACH,AQDA,GlBAG,AkBAAlE,GlBAG3D,AUCd,GAAiBC,CQDC,CAAC,ClBAC,CAACA,GUCG,CAACmE,AQDP,CAAlB,ElBAc,EUCG,CVDc,EAA/B,AUCiCT,EVCjC,KUDwC,CAAC,UAAD,CAAxC;AJDA,ALCA,ADEA,AQDA,ACAA,ACAA1D,ACAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,OKAO,CAAC6H,MAAR,GAAiB7H,OAAO,CAAC8H,SAAR,GAAoBpE,OAAO,CAAC,UAAD,CAA5C;AJDA,ALCA,ADEA,AQDA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaFA,IAAIsE,QAAQ,GAAGD,IAAI,CACf;AZAJ,ALCA,ADEA,AQDA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaDQE,EAAAA,IAAI,EAAE,QADV;AZCJ,ALCA,AOCA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaDQC,EAAAA,aAAa,EAAE,CAFnB;AZEJ,ALCA,ADEA,AQDA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaDQC,EAAAA,ElBEJlI,WkBFiB,EAAE,CAHnB,ElBKJ;AMFA,ALCA,ADEA,AQDA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaDQmI,EAAAA,ElBEJlI,MkBFY,EAAE,CAAC,SlBEnB,EkBFkB,EAAc,UAAd,EAA0B,SAA1B,EAAqC,QAArC,CAJd;AZIJ,ALCA,AOCA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaDQmI,EAAAA,UAAU,EAAE;AZApB,ALCA,ADEA,AQDA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaDYC,IAAAA,KlBEHnI,IkBFY,EAAE,UlBEvB,GAA4B;AMF5B,ALCA,ADEI,AQDJ,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaFyB8H,MAAAA,ElBGf,EkBHmB,ElBGf7H,AkBHiB,KlBGrB,CAAU,iCAAV,CAAN;AMFJ,ALCA,ADEC,AQDD,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaHuB,KADH;AZGpB,ALCA,AOCA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaHYmI,IAAAA,QAAQ,EAAE;AZEtB,ALCA,ADCA,AQAA,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaJwBN,MAAAA,GlBIf5H,CkBJmB,EAAE,gBlBI9B,GAAgC;AMDhC,ALCA,ADCI,AQAJ,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaLsB,KAFF,GlBOV,IAAID,KAAJ,CAAU,mCAAV,CAAN;AMDJ,ALCA,ADCC,AQAD,ACAA,AEAA,AJAA,ALAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaLYoI,IAAAA,OAAO,EAAE;AZIrB,ALCA,AOCA,ACAA,AEAA,ATAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaNuBP,MAAAA,IAAI,EAAE;AZK7B,ALCA,ADAC,AQCD,ACAA,AEAA,ATAA,AEAA,AUAA,AXAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaPqB,KAHD,QlBSP;AMAb,ALCA,ADAI,AQCJ,ACAA,AEAA,ATAA,AEAA,ADAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaPYQ,IAAAA,ElBMJ,IkBNU,EAAE;AZMpB,ALCA,ADAQ,AQER,ACAA,AEDA,ATAA,AEAA,ADAA,AaAA,AJAA,ACAA,AEAA,AVAA,AaRsBR,MAAAA,ElBOV,EkBPc,EAAE,EVW5B,CRJmB3H,UAAP,KAAsB,UAA1B,EAAsC;AMA9C,ALCA,ADAYL,AQIZ,AGHA,ATAA,AEAA,ADAA,AaAA,AJAA,ACAA,AEAA,AGToB,MlBQRA,gBAAgB,GAAGK,UAAnB;AMAZ,ALCA,ADAS,AQIT,ACFA,AEDA,ATCA,AEDA,ADAA,AaAA,AJAA,ACAA,AEAA,AGdoB,GALhB,CToBA4G,CTJI,CEIFzD,EAAE,GFFO,AEEJC,OAAO,CAAC,GOAG,CPAJ,CAAlB,COAyB,UAASmD,CAAT,EAAY;AHFrC,ALCA,ADAY5G,ASEV,AEDF,APAA,ADAA,AaAA,AJAA,ACAA,AEAA,AGTQyI,EAAAA,IlBQIzI,ISEF,OAAO4G,CAAf,ITF0B,AkBRA,EAAE,ClBQC1G,gBAAnB;AMAZ,ALCA,ADAS,AQGT,ACDI,AEDJ,ATAA,AEAA,ADAA,AaAA,AJAA,ACAA,AEAA,AGrBI,CADe,CAAnB,IhBsBMwD,GMEGqC,ACDA,CPDC,GAAGtC,IOCT,GPDgB,CAAC,EMErB,CAAwBc,GAAxB,ANFoB,CAApB,CME6B0B,IAA7B,EAAmC;AFHnC,ALCA,ADAK,AQGH,ACDI,AEDN,APAA,ADAA,AaAA,AJAA,ACAA,AEAA,AGPA,GlBAI,CAME,AkBNFyC,KVSK7C,ERHIvF,AkBNF,ClBML,CSEOsG,CTFG,ASEV,ASRQ,CVSC,AUTA,CVSC5E,SAAP,CAAiB+D,YUTZ,EVSL,AUT+B,CVSCrF,IAAhC,CAAqC6D,GAArC,EAA0C0B,IAA1C,CAAP,AUTY,EAA4C,kBAA5C,EAAgE,iBAAhE,EAAmF,mBAAnF,EAAwG,2BAAxG,EAAqI,sBAArI,EAA6J,oBAA7J,EAAmL,oBAAnL,CAAd;AZMA,ALCA,ADAQjG,AQGP,AGFD,ATAA,AEAA,ADAA,AaAA,AJAA,ACAA,AEAA,IfDQA,KECC2D,GAAT,CAAcC,OFDU,GAAG1D,gBAAnB;AMAR,ALCA,ADAK,ASED,AEDJ,ATDsB,AECtB,ADAA,AaAA,AJAA,ACAA,AEAA,AGPA,STQS,ASRAyI,STQL,WSRJ,GAAgC;AZMhC,ALCA,AOGA7I,ACDM,AEDN,ATFA,AEEA,ADAA,AaAA,AJAA,ACAA,AKPI,EhBKiC,IMI/B,AUTE8I,CVSD7I,EUTI,GAAG,CTQD6G,CDCb,ACDc,ESRIiC,CVSD,ACDA,MAAH,GAAY,CDCA3C,EAAT,CUTH,CVSgBC,CUT1B,CTQE,CDCW,EAAkBC,EAAlB,EAAsBhC,OAAtB,EAA+B;AFHhD,ALCA,ADDI,AQIF+B,AGFF,ATFEtC,AEEF,ADAA,AaAA,AJAA,ACAA,AKPI,EVSFsC,ANJAtC,GMIG,CRJG,AkBLAiF,EVSA3C,CNJC,CAACxC,CMIC,ENJT,AgBLa,ChBKA,CMIA,CUTG,EVShB,AUTE,ehBK6BC,OAAQ,EAAvC;AICF,ALCA,ADDQ,AQINwC,ACDE,AEDJ,ATFC,AEED,ADAA,AaAA,AJAA,ACAA,AKPIwC,EVSFxC,AUTEwC,EVSA,CUTG,CAACG,CVSD3C,CRJK,CQIH,ACDA,IDCI,ERJM7F,CQIjB,CCDE,KSRA,CAAqB,IlBKb,KAAwB,SkBLhC,ClBKI,CkBLqC,ClBKG,WkBLS;AZMzD,ALCA,ADDYN,AQIV,ACDI,AEDN,APAA,ADAA,AaAA,AJAA,ACAA,AKPQ,MlBKIA,AQINsE,EUTM,CVSH,GAAG,CCDC2C,ASRI8B,CVSf,OCDmB,CAACpC,CAAD,ASRT,ClBKkB,ASGjB,GTHoBrG,ASGNqG,CAAd,ASRmB,CAAxB,ETQuB,ASRI,ETQ7B,MTHM;AMCZ,ALCA,ADDS,AWET,ATFA,AEEA,ADAA,AaAA,AJAA,ACAA,AKPY,KlBGJ,CEEF9C,IgBLU4D,ClBKD,EEAF,AgBLM,GhBKH,AgBLMuB,IhBKtB,AgBL0B,CAAC/E,KAAL,CAAW,KAAKgF,YAAhB,CAAV;AZMZ,ALCA,ADDYjJ,AQIV,ACDE,AEDJ,ATFA,AEEA,ADAA,AaAA,AJAA,ACAA,AKNYyH,MlBIAzH,AQIN,ANJA8D,AgBJM2D,GAAG,CAACyB,GVQHjD,CURD,CVQN,AURexB,KVQD,ANJA,EgBJR,ChBIW,AgBJMpE,ClBIC,AkBJA,GlBIGF,CQI3B,AUR4B,IVQF8F,EAAE,CAAChF,MAAH,KRJpB,AQIkC,CAA5C,EAA+C,KNJjD;AICA,ALCA,ADDS,AQIL,ACDE,AEDN,ATFA,AEEA,ADAA,AaAA,AJAA,ACAA,AKNgB,MhBIV8C,KMIKO,CURS,CTOP,CDCT,CCDE,EPHW,GAAG,MAApB;AICA,ALCA,ADDK,AQIF,ACbD,AEWF,ATFA,AEEA,ADAA,AaAA,AJAA,ACAA,AKNoB,GlBFhB,CAME,EEAAN,KFAO3D,CAAP,EAAU,AkBJQyH,MhBIJ,EgBJY,ChBIT,AgBJUkB,IAAI,CAAC/E,KAAL,CAAY,ChBI7C,EAEA,AgBN+C5D,CAAC,CAAC8I,IAAK,EAArB,CAAD,CAAZ,EAAuC;AZK3D,ALCA,ADDQnJ,ASGP,AEDD,APAA,ADAA,AaAA,AJAA,ACAA,AKNwB4D,CTPxB,GTWQ5D,QkBJgB4D,OAAO,CAACF,ElBIN,CkBJF,CAAY,ClBIPvD,AkBJL,mBlBIhB;AMCR,ALCA,ADDK,AQIH,AGFF,ATDA,AECA,ADAA,AaAA,AJAA,ACAA,AKNwB0I,MVQlBzC,GNHGnC,GMGG,AURY4E,EhBKxB,CMGe,ANHC3E,IgBLe,CVQ7B,AUR8BtC,IAAR,CAAaoH,IAAI,CAAC/E,KAAL,CAAY,GAAE5D,CAAC,CAAC8I,IAAK,EAArB,CAAb;AZKxB,ALCA,ADDC,AQIClD,ACDFpG,AEDA,ATFoB,AEEpB,ADAA,AaAA,AJAA,ACAA,AKNwB+D,ClBfvB,CQuBCqC,ERvBF,AQuBI,ECDE,CDCCA,ACDAnG,EDCE,CAAC0E,EURcZ,ETOxB,CDCO,CAASsC,CCDC,EDCV,AURwB,CVQ7B,AUR8BxC,GAAR,CAAYmF,GTOVvE,GAAT,CSPO,CTOO4B,GAAd,EAAmBC,EAAnB,EAAuBlD,IAAvB,EAA6B;AHF9C,ALCA,AOIE,ACFAiD,AEDF,ATHA,AEGA,ADAA,AaAA,AJAA,ACAA,AKNqB,ETOnBA,APJ0C/B,GOIvC,CDECkC,ECFEH,GAAG,EDEE,ECFE,CDEC,ECFd,EDEA;AFJF,ALCA,ADFA,ASIEC,AEDF,ATJoD,AEIpD,ADAA,AaAA,AJAA,ACAA,AKNiB,ETOfA,EAAE,GAAGA,ETJE5F,ASIA,ASbO,CAME,GTOL,GAAX,CSPuB6I,ElBGzB,CAAoB5I,AkBHF,EAAY,ClBG9B,EAAyB;AMEzB,ALCA,ADFI,AQKF,AGFF,ATLA,AEKA,ADAA,AaAA,AJAA,ACAA,AKNoBoD,MlBGZ7D,AQKFoE,IURcP,GVQP,IAAI,AURU,CAACF,GAAR,ClBGI,AkBHQ0F,EVQRjF,CURJ,ElBGS/D,IQKE,CAACiG,KRL5B,EAAqC,AQKxB,KAA2B,QAA1C,EAAoD;AFHtD,ALCA,ADFQ,AQKJA,ACFF,AEAF,ATNgF,AEMhF,ADAA,AaAA,AJAA,ACAA,AKNiB,IVQbA,ECFE/B,GAAG,EDEE,GAAGH,ACFA,IAAZ,EAAkB,CDEC,CAACkC,OAAlB;AFHJ,ALCA,ADFQ,AQKL,ACFC/B,AEAJ,ATPyG,AEOzG,ADAA,AaAA,AJAA,ACAA,AKNa,ITMTA,GAAG,AShBK,GTgBF4C,CTHK9G,QSGX,ETHqB,CAACI,GAAD,EAAM,CAAN,CAAjB;AMER,ALCA,ADFK,ASGF,AEAH,ATPE,AEOF,ADAA,AaAA,AJAA,ACAA,AKLY,GlBFa,CAKrB,IELI4D,EgBEQiF,GhBFH,EgBEQ,ChBFLhF,EgBEQiF,KhBFD,CAACnF,EgBEQ,CAACoF,IhBFF,IAAIpF,MgBEX,ChBFkB,AgBEM,ChBFLC,KAApB,CAArB,MgBEsB,CAAZ;AZIZ,ALCA,AOGE,AGFF,ATPE,AEOF,ADAA,AaAA,AJAA,ACAA,MLEM/C,ENTEiD,CMSC,ENTE,CMSC2B,EAAE,ANTA,CMSChF,CNTb,CAFuG,CAIvG,GMOA,CAjB8C,CAkB9C;AFJF,ALCA,AQCE,AEAF,APAA,ADAA,AaAA,AJAA,ACAA,AKNY,MTMN,KSNW,ETMJqD,ESNQ3C,CTMf,ASNgB,GAAG,CAAb,CTMS,CSNOA,CAAC,GAAGkH,GTM9B,EAA6B,ESNQ,CAAC5H,MAA5B,EAAoCU,CAAC,EAArC,EAAyC;AZKrD,ALCA,ADHI,AQMF,ACFE,AEAJ,ATNEuC,AEMF,ADAA,AaAA,AJAA,ACAA,AKNgB,EhBAdA,GAAG,CFEG,AQMFmC,ANRA9B,CFEGxE,ISIEoH,CSNSqC,CVQP,CCFC,APNZ,COMapC,ASNQ,CVQP,CAAV,ANRW5C,CgBAS6E,GVQLhI,CNRnB,CFEuB,AEFF2C,AgBAQ,CVQP,AURQyF,CTMP,CAACnF,CDEC+B,CRNGpG,CSIL,CAAX,EAAkB,CSNN,CVQxB,AURwC,CAAhB,CVQU,AURpB,ChBAd,EAAqCwE,GOMEiC,CAAT,CTJvB,CSImC,CPN1C,CAA6C,CFEG,CAAC3G,QEFM2E,IAAV,EAAgBC,EFEvD,CEFuC,EAAqB,EFEIvE,UAApE,EAAgF;AMGpF,ALCA,ADHQL,AQMJsB,ACFE,AEAN,ATNI,AEMJ,ADAA,AaAA,AJAA,ACAA,AKNgB,IlBERtB,AQMJsB,GAAG,GAAGgF,ACFAgB,EAAE,ASNQqC,GTMLpC,EDEX,AURqB,GlBED,AkBFIkC,GlBEDpJ,AkBFI,CAACuJ,SlBExB,ASIyB,CAAC3C,ASNN,CAAe,CAAf,CAAZ,eTMoC,CAACN,CAAD,CAAnB,CAAlB,GAA4CP,EAArD;AHDN,ALCA,ADHQ,AQML,AGFH,ATNI,AEMJ,ADAA,AaAA,AJAA,ACAA,AKNgB,UhBANvB,CFEKxE,CkBFKwJ,KAAK,GAAGJ,ClBEH,AEFJ,CFEKhJ,CkBFK,ChBAPkE,AgBAQiF,ClBEP,EAAM,CAAN,AEFG,CFEpB,AEFqB9E,KAAL,AgBAI,ChBAOf,AgBAQ,CAAf,CAAZ,YhBAQ,CAApB,CAFgE,CAGhE;AIIJ,ALCA,ADHK,ASGC,AECN,APAA,ADAA,AaAA,AJAA,ACAA,AKNgB,UTKNgD,ESLU+C,KTKH,ASLQ,CTKPvF,ESLUkF,CTKP,CAAC9C,CAAD,ASLU,CTKd,ASLeiD,CTK1B,EAAqB,OSLC,CAAe,CAAf,CAAZ;AZKhB,ALCA,AOGE,ACHM,AECR,ATNI,AEMJ,ADAA,AaAA,AJAA,ACAA,AKNgB,OVQT,CNRC/E,GMQGjD,CAAC,AURQmI,GVQL,ACHA3C,CDGb,CURuB,CVQPxF,ACHA,CDGC,ACHA2C,APLA,CgBASkF,EVQNnI,ACHA,CAACqF,APLA,AgBAQ,CTKT,ASLUiD,CVQ9B,ACHgB,EDGS,ACHA,APLvB,EMQyBhI,ANRA,CMQ3B,EAA8B,EURJ,CAAe,CAAf,CTKQgF,ASLpB,CTKW,EAAY;AHAvC,ALCA,ADJI,AQOA,ACHM,AECV,ATNM,AEMN,ADAA,AaAA,AJAA,ACAA,AKNgB,MlBCR,EQOAL,CAAC,GAAGL,ANRAnB,AgBAQiF,EVQN,CAACpI,ANRA,CMQD,CAAF,ACHK0F,ASLQ,CVQPjC,ANRAR,COKC,CSLS4E,ETKNlC,CSLS,CAACqC,CVQpB,CAAcvD,GNRG,CAAC,CAAD,CMQjB,ANRN,CADuB,CMSK,ANP5B,AgBDsB,CAAe,CAAf,CAAZ,EVQJ,CAAR,ACHoC,CAACY,kBAAkB,CAACL,CAAD,CAAnB,CAA9B;AHAV,ALCA,ADJQ,AQMJ,ACFK,AECT,APAA,ADAA,AaAA,AJAA,ACAA,AKNgB,QVQRhC,CCLU,CAAH,CDKJ,ACHA4C,CSLSyC,EVQN1D,CAAC,ACLA,CDKCC,ACHAL,CSLS,ETGV,CAAP,ASHoBsD,GVQd,AURiB,CVQPrD,AURQwD,EVQlB,CADV,OUPwB,CAAe,CAAf,CAAZ;AZKhB,ALCA,ADJQ,AQKJ,ACDG,AECP,ATNM,AEMN,ADAA,AaAA,AJAA,ACAA,AKNgB,OTCV,CDOEnD,ENREzB,CFCKhF,CQKX,AUNgBkK,CTKP,APLA,GAAIrF,CgBAQ,GAAG4E,GAAG,CAACG,GlBCD,AEDH,CFCInJ,AEDH,CAAD,CAAX,CFCc,EAAM,CAAN,AEDI,AgBAP,ClBCpB,AkBDmC,ChBArC,AgBAsB,CAAZ;AZKhB,ALCA,ADJK,AQID,ACAI,AECR,ATNM,AEMN,ADAA,AaAA,AJAA,ACAA,AKNgB,GlBFZ,CAGE,IQMQiG,GRNFpG,CAAN,AQIF,ANLQ2E,AgBAQkF,ElBCN,CSIC7C,APLA,EOKE,ASLQ,ChBAPtC,EOKEuC,ASLQkC,ChBAP,CAACvI,CgBAS,CAAC0I,IhBAd,GAAa,CAAzB,EgBAsB,CAAe,CAAf,CAAZ,CTKsB,CAAC3C,kBAAkB,CAAC1C,GAAG,CAACoC,CAAD,CAAJ,CAAnB,CAA9B;AHAR,ALCA,ADJQ,AQGJ,ACCG,AECP,ATNM,AEMN,ADAA,AaAA,AJAA,ACAA,AKNgB,QlBCJ,AQKQA,CAFhB,GNJQzB,AgBAQkF,KAAK,GAAGX,GAAG,CAACG,EhBAN,GAAG5E,GAAG,CAAC,CAAD,AgBAJ,ChBAC,AgBAc,CAAf,CAAZ,GhBAwB,GAAX,IAAkBA,GAAG,CAACC,GAAD,CAAH,KAAa,GAAtD;AIKN,ALCA,ADJY,AQER,ACEC,AECL,ATNM,AEMN,ADAA,AaAA,AJAA,ACAA,AKNgB0E,KTJF,CAAH,CASJnC,CDAgBZ,AULP+C,CVGZ,ECPO,CASCxD,APLAhB,CgBAS,CAACkF,CTJX,CAAP,OSIY,GhBAU,AgBAS,GhBANrF,GAAG,CAAC,CAAD,CAAH,EgBAgB8D,GhBAL,GAAX,CgBAuB,CAAC5H,EhBAN8D,GAAG,CAACC,AgBAN,GhBAK,AgBAYrD,ChBAf,AgBAiB,KhBAJ,GAAtD,CANuB,CAQvB,CgBFU;AZKhB,ALCA,ADJY,ASKT,AEAH,APAA,ADAA,AaAA,AJAA,ACAA,AKNgBiI,QAAAA,KlBCG7J,AkBDE,CAACqK,SAAN,GAAmB,GlBCA,CAAC3J,IAAjB,CAAsB,IAAtB,AkBD4BgI,ElBCAjI,GAA5B,EAAiC,AkBDE,ClBCnC,AkBDoCqI,ClBC3C,MkBDkD,CAAClH,CAAD,CAAP,CAAW4G,MAAZ,CAAoB,wBAA1D;AZKhB,ALCA,ADJS,AQIL,AGCJ,ATLM,AEKN,ADAA,AaAA,AJAA,ACAA,AKNgBsB,KlBFR,CAGE,EQIFlF,AULQkF,EhBCN3E,CMIC,ERJK7E,AkBDK,ClBCX,AkBDY+J,CVKP,CRJG,AQId,EAAc,KULF,ChBCQ,EgBDUvB,EhBCN5D,KgBDa,CAACtD,CAAD,CAAP,CAAW0G,KhBCvC,EAAsC,CgBD5B;AZKhB,ALCA,ADJY,AQIN7B,ACCJ,AEAF,ATLQzB,AEKR,ADAA,AaAA,AJAA,ACAA,AKNgB+E,MVKVtD,ACCA,CAACvD,CPLC8B,AgBDQ+E,EVKN,CCCR,APLS,EMIExD,ACCA,ASNQ,CVKP,ANJAvB,AgBDQqF,CVKPxD,ENJE,CAACzB,EOKE,CDDP,CAAS,ACCT,CDDA,AULG,EVKSR,CULU,ChBCrB,CMID,ANJe,CMItB,ANJQ,EAAiBK,GAAjB,CAAN,CADoC,CAGpC,yBgBH8D6D,OAAO,CAAClH,CAAD,CAAP,CAAW2G,OAAQ,WAAzE;AZKhB,ALCA,ADJY,AQIN7B,ACCJ,AEAF,APAA,ADAA,AaAA,AJAA,ACAA,AKNgBsD,MVKVtD,EULUsD,CTMPzC,CDDC,GRJSvH,AQINuG,AULQ,CVKP,AULQ8D,CVKPxD,MAAF,CAASjC,CULN,EVKS,CULU,CTMR,CDDC,ACCAqC,CTLO,AQItB,CRJuBvG,AQI9B,IRJa,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,ASKN,CTL3B,ASK4ByC,CTLnC,GSKkC,CAAnB,CAAlB,GAA+CkD,EAA/C,GACAmB,kBAAkB,CAACN,YSPwE6B,MTOtD,CAACvE,ASP4D,CAAC3C,CAAD,CTO7D,ASPsD,CTOzE,ASPoFyG,CTM7G,QSNuH,KAAIS,OAAO,CAAClH,CAAD,CAAP,CAAWyG,SAAU,MAAlI;AZKhB,ALCA,ADJS,AQIJ,ACEJ,AEDD,ATJQ,AEIR,ADAA,AaAA,AJAA,ACAA,AKNgB4B,CTjBhB,IDmBI,GUFYA,GVKL,CNHC/E,CgBFS,CAACmF,SAAN,GhBER,AgBF0B,EhBEN,EgBFZ;AZKhB,ALCA,ADJK,AQIC5D,AGCN,ATJUzB,AEIV,ADAA,AaAA,AJAA,ACAA,AKNgBkF,MVKVzD,EULUyD,EVKN,ANHAlF,GMGGuB,ANHA,AgBFQ,CVKf,AULgB8D,EhBENrF,GAAG,CAACK,GgBFJ,GAAkB,ChBElB,AgBFA,ChBEYrB,WAAZ,EAAyBF,OAAzB,CAAN;AIGV,ALCA,ADFC,AQEK4C,ACEN,AEDA,ATJS,AEIT,ADAA,AaAA,AJAA,ACAA,AKNgByD,ITOZpD,EDFEL,EULUyD,EVKN,CCEC,EDFE,AULQ,CTOPzI,ASPQ2I,CVKhB,ICEa,CAACtD,GSPJ,GAAkB,CTOpB,ASPE,ITOe,UAAUC,EAAV,EAAc;AHF7C,ALCA,AOAK,ACEH,AEDF,ATJO,AEIP,ADAA,AaAA,AJAA,ACAA,AKNgBoD,OhBLV,CgBKUA,CTOPvE,IPLI,AgBFQ,CAACwE,CTOP,CAACrI,OSPA,ETOP,CAAiBwC,ASPQ,CAAlB,OTOP,CAA0B9D,IAA1B,CAA+BsG,EAA/B,MAAuC,gBAA9C;AHFF,ALCA,ADHA,ASKC,AEDD,ATJQ,AEIR,AYAA,AJAA,ACAA,AKNgBnD,CTKhB,OSLgBA,ClBEPlD,MkBFc,CAACgD,GAAR,CAAa,IlBE7B,CAAyB/C,MAAzB,EAAiC,OkBFe8H,OAAO,CAACI,OAAO,CAAClH,CAAD,CAAP,CAAW4G,MAAZ,CAAoB,wBAA3D;AZKhB,ALCA,ADHI,AQGA7B,AGCJ,ATJQ3B,AEIR,AYAA,AJAA,ACAA,AKNa,IVKT2B,CAAC,CRHG1G,EQGA6G,ANHA9B,GAAG,GAAGA,GAAG,CAACM,IAAJ,EFAY,AEAlB,EMGkB,CAACmB,ERHIlG,EQGL,CAAtB,SRHA,EAAyC;AMG7C,ALCA,ADHQ,AQGJqG,ACEJ,AEDA,ATJO,AEIP,AYAA,AJAA,ACAA,AKNS,IVKLA,CAAC,GAAGE,CCECM,GAAT,CAAcJ,EAAd,EAAkBS,CAAlB,EAAqB,MDFK,CAACf,IAAD,CAAtB;AFAJ,ALCA,ADHQ,ASKN,AEDF,APAA,AYAA,AJAA,ACAA,AKNK,GAxCD,GT+CEM,EAAE,CAACI,ETLM7G,CSKb,EAAY,OAAOyG,ETLM,ASKJ,CTLKpG,ASKJwG,GAAH,CAAOK,CAAP,CTLM,ASKb,CTLN;AMGR,ALCA,ADHK,AQGD,ACEF,AEDF,ATJMlD,AEIN,AYAA,AJAA,ACAA,AKLIqE,EAAAA,ClBH6B,CAK7B,CkBFG,CTMDlB,APLAnD,AgBDE+F,EVIA,CAACvE,ACEA,APLA,CAAChB,AgBDN,CAAS,CTMD,CPLH,COKP,APLI,EgBDF,ChBCaC,CgBDG,EhBCd,GMGiB,CAACT,GAAD,EAAMoC,CAAN,CAAnB,EAA6B,iEUJ7B;AZIJ,ALCA,AOAMpC,AGCN,ATJK,AEIL,AYAA,AJAA,ACAA,AKLIqE,EAAAA,GhBrBA,AgBqBG,CVIDrE,AUJEgG,GVIC,CAAC5D,CAAD,ANHE,CMGL,GAASC,ANHAvC,CMGT,INHK,EAAW,AgBDlB,CAAqB,WAArB;AZIJ,ALCA,AOAK,ACCH,AEAF,ATJMV,AcIN,AJAA,ACAA,AKJIiF,EAAAA,GVCA,AUDG,ChBADjF,AgBAE6G,CTID,EPJE,CAAE,AgBAP,CVGO,ACCA5I,CAAC,GDDGmF,ACCA,CAAb,EAAgBnF,CAAC,GDDG,ACCAoF,CDDCzC,CCCC,CAACrD,CDDC,CAACyF,CAAD,CAAJ,CAAX,CCCT,CDD8B,CCCC/E,CAAC,EAAhC,EAAoC,qBPJqBgD,GAAG,GAAG,CAAE,KAAID,IAAK,EAAnE,CAAH;AIGN,ALCA,ADJI,AQIEJ,ACCFmD,AEAJ,ATJK,AcIL,AJAA,ACAA,AKJC,ITIGA,ETLI,AQIFnD,CRJGtE,ASKF,CAAC4B,CDDC,CAAC8E,CAAD,CAAH,ACCF,CDDS9E,ACCA4F,CAAC,CAACT,EDDT,ACCW,CDDCJ,ACCAhF,CDDZ,ACCW,CAAH,EAAQA,CAAR,CAAV,CTLuB,KAAKxB,mBAAvB,IAA8C,CAACH,kBAAhD,KAAuEM,YAA3E,EAAyF;AMI7F,ALCA,ADJQN,AQIH,ACCF,AEAH,ATJG,AcIH,AJAA,ACAA,GXjCE,CF4BMA,CQEG,MAEA,WRJe,GAAGM,YAArB;AMIR,ALCA,ADJQ,AQIFgE,AGCN,ATHE,AcGF,AJAA,ACAA,AKJAoE,MVGMpE,GAAG,ANFAA,CMECoC,CRJKpG,AQIN,CAAH,ANFJ,GMEa,CAACgE,GAAG,CAACoC,AUHA,CVGD,CAAJ,CRJY,CAAC/F,AQIJgG,CAAT,CAAT,IRJqB,CAAnB;AMIR,ALCA,ADJK,AQIA,ACAH,AECF,ATHC,AcGD,AJAA,ACAA,EXDA,OOASc,GAAP;AHAF,ALCA,AOAG,ACAF,AECD,AKAA,AJAA,ACAA;APDA,ALCA,ADLI,AWMJ,AKAA,AJAA,ACAA,MbNQ;AMKR,ALCA,ADLQ,AQKN,ACAF,AECA,ATHA,AcGA,AJAA,ACAA,IJDIL,KDAK9C,ANFAgB,GMEP,ECAY,CPFd,CAAiBnB,COEAyB,MAAM,CAACC,IAAP,IAAe,UAAUvB,GAAV,EAAe;AHA/C,ALCA,ADLQ,AQKP,ACAC,AECF,ATJyB,AcIzB,AJAA,ACAA,CLlDA,KCiDMmD,GAAG,ETLMzH,CSKH,EAAV,eTL+B,CAACW,MAAD,CAAzB;AMKR,ALCA,ADLK,AWML,ATLA,AcKA,AJAA,ACAA,GbTI,CAGE,OAAON,CAAP,EAAS;AMKf,ALCA,ADLQ,AQKR,ACDE,AEEF,ATNsD,AcMtD,AJAA,ACAA,ILDIyG,GCDG,CTJK,GQKD,ACDAhC,GDCGrD,ACDZ,IAAgB6C,CDCC,CAACwC,CCDlB,EAAqB,IDCT,IAAiB,UAAUC,EAAV,EAAc;AFA7C,ALCA,ADLY,AQKV,ACDE,AEEJ,ATPgF,AcOhF,AJAA,ACAA,QJFQnB,CDCCA,KCDK,CDCC,ACDA7D,CDCCA,QCDR,CDCC,ACDgB+D,CDCCvB,QAAjB,CAA0B9D,IAA1B,ACDD,CDCgCsG,ACDAtG,EDC/B,ECDD,CAAqC6D,GDCG,ACDxC,EAA0CQ,GAA1C,CAAJ,EAAoD2C,GAAG,CAAC7F,IDC1D,ACDsD,CAASkD,GAAT;AHCxD,ALCA,ADLY,AQKX,ACDE,AEEH,ATPE,AcOF,AJAA,ACAA,CLHA,KNJMS,OFCavF,GEDH,GAAGyD,IAAI,CAAC+B,OFCa,AEDlB,CFCmB/E,AEDNb,IFCb,CAAwB,EEDJ,CAACuD,CFCrB,EAA8BxC,AEDjB,EAAb,EAA4B,EFC5B,CAAP,GEDO,CAAjB;AIMF,ALCA,ADLS,AWMT,ATPE,AcOF,AJAA,ACAA,KbTQ,CAGE,AEDJ8E,OFCWpF,CAAP,EAAS;AMKnB,ALCA,ADLY,ASGV,AEGF,ATRe,AcQf,AJAA,ACAA,SJHSoH,GAAP;AHEF,ALCA,ADLY,ASGX,AEGD,ATTc,AcSd,AJAA,ACAA,CJTA,GPA+B,MAA7B;AIQF,ALCA,ADLY,AWMZ,ATTE,AcSF,AJAA,ACAA,MXTMrD,KAAK,EFGQpE,CEHL,KAAZ,YFGmC,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AMKZ,ALCA,ADLS,AWMT,AKAA,AJAA,ACAA;APDA,ALCA,ADLK,AWML,ATTE,AcSF,AJAA,ACAA,MXTMwD,OAAJ,EAAa;AIQf,ALCA,ADFC,AWGD,ATTI,AcSJ,AJAA,ACAA,QXTQA,OAAO,CAACV,IAAR,IAAgB,IAApB,EAA0B;AIQ9B,ALCA,AUCA,ATTM8B,AcSN,AJAA,ACAA,MXTMA,UAAU,GAAGpB,OAAO,CAACV,IAArB;AIQN,ALCA,ADHA,AWIA,ATTK,AcSL,AJAA,ACAA,IbJI7C,KAAK,GAAG,EAAZ;AMGA,ALCA,ADHA,AWIA,AKAA,AJAA,ACAA,IbJIC,QAAQ,GAAG,KAAf;AMGA,ALCA,ADHA,AWIA,ATVI,AcUJ,AJAA,ACAA,IbJIC,IENIqD,OAAO,CFMf,AENgBsB,QAAR,IAAoB,IAAxB,EAA8B;AISlC,ALCA,ADHA,AWIA,ATVMA,AcUN,AJAA,ACAA,IbJI1E,EENE0E,QFMQ,AENA,GFMG,AENAtB,CFMC,CAAlB,KENwB,CAACsB,QAAnB;AISN,ALCA,AUCA,ATVK,AcUL,AJAA,ACAA;APDA,ALCA,ADHA,AWIA,AKAA,AJAA,ACAA,SbJSzE,eAAT,GAA2B;AMG3B,ALCA,ADHI,AWIJ,ATXI,AcWJ,AJAA,ACAA,MbJQ,CAACH,CEPDsD,OFOA,AEPO,CAACC,GFOK,CAACtD,CEPd,IAAiB,IAArB,EAA2B,CFO3B,EAAgC;AMGpC,ALCA,ADHQ,AWIR,ATXMsD,AcWN,AJAA,ACAA,MXXMA,KAAK,GAAG,IAAR;AIUN,ALCA,ADHK,AWIL,ATXK,AcWL,AJAA,ACAA;APDA,ALCA,AUCA,ATXG,AcWH,AJAA,ACAA;APDA,ALCA,ADJIvD,AWKJ,AKAA,AJAA,ACAA,EbLIA,QAAQ,GAAG,KAAX;AMIJ,ALCA,AUCA,ATXE,AcWF,AJAA,ACAA,MXXM;AIUN,ALCA,ADLI,AWMJ,ATXI,AcWJ,AJAA,ACAA,MbNQC,YAAY,CAACG,MAAjB,EAAyB;AMK7B,ALCA,ADLQL,AWMR,ATXI,AcWJ,AJAA,ACAA,IbNQA,KAAK,CELH8E,EFKM5E,IELA,GAAGmD,KFKS,AELJ,CFKK/C,AELJqC,EAAE,CAACoC,GFKZ,CAAoB/E,KAApB,CAAR,EELiB,CAAgB2E,UAAhB,EAA4B;AIUrD,ALCA,ADLK,AWML,ATZuDE,AcYvD,AJAA,ACAA,GbRI,GEJmDA,GFM5C;AMKX,ALCA,ADLQ1E,AWMR,ATbqD,AcarD,AJAA,ACAA,IbNQA,CEPiB,CAAD,EAA4C,MFOlD,GAAG,CAAC,CAAd;AMKR,ALCA,ADLK,AWML,ATdsEqD,AcctE,AJAA,ACAA,MXdsEA;AIatE,ALCA,AUCA,ATfoE,AcepE,AJAA,ACAA,KXfwB,CAApB;AIcJ,ALCA,ADNI,AWOJ,ATdIwB,AccJ,AJAA,ACAA,IXdIA,EFOIhF,IEPE,CFOG,AEPFiF,CFOG5E,GEPV,CAAYyE,EFOZ,EAAkB,EEPlB,EAAoBjB,OAApB,CAA4B,UAAUK,GAAV,EAAe;AIa/C,ALCA,ADNQ3D,AWOR,ATdM,AccN,AJAA,ACAA,IbPQA,MEPE,CAACyE,GFOO,GEPD,CAAC7D,SAAP,CAAiB+D,cAAjB,CAAgCrF,IAAhC,CAAqCb,OAAO,CAACsC,GAA7C,EAAkD4C,GAAlD,CAAL,EAA6D;AIanE,ALCA,ADNK,AWOL,ATdQlF,AccR,AJAA,ACAA,QXdQA,OAAO,CAACsC,GAAR,CAAY4C,GAAZ,IAAmBY,MAAM,CAACZ,GAAD,CAAzB;AIaR,ALCA,ADNC,AWOD,ATdO,AccP,AJAA,ACAA,OXhBM,MAEO,IAAIV,KAAJ,EAAW;AIaxB,ALCA,AUCA,ATdQV,AccR,AJAA,ACAA,QXdQA,GAAG,CAAE,IAAGoB,GAAI,qEAAT,CAAH;AIaR,ALCA,ADNA,AWOA,ATdO,AccP,AJAA,ACAA,SbPS3D,UAAT,GAAsB;AMMtB,ALCA,ADNI,AWOJ,ATdK,AccL,AJAA,ACAA,KXpBI,CFaIN,QAAJ,EAAc;AMMlB,ALCA,ADNQ,AWOR,ATbI,AcaJ,AJAA,ACAA,WXbW;AIYX,ALCA,ADNK,AWOL,ATda6E,Accb,AJAA,ACAA,MXdaA;AIab,ALCA,AUCA,ATfW,AceX,AJAA,ACAA,KXfI;AIcJ,ALCA,ADPI,AWQJ,ATfG,AceH,AJAA,ACAA,GX5BE,CAaE,EFOItE,KEPGf,CAAP,CFOW,CEPD,EFOIE,UAAU,CAACS,eAAD,CAAxB;AMOJ,ALCA,ADPIH,AWQJ,ATfI,AceJ,AJAA,ACAA,EbRIA,QAAQ,CEPD,EFOI,IAAX;AMOJ,ALCA,ADNI,AWOJ,AThBakF,AcgBb,AJAA,ACAA,MbPQ1E,AETK0E,GFSF,EETO,CFSJnF,CETMP,IFSD,CAACY,MAAhB;AMMJ,ALCA,AUCA,ATjBW,AciBX,AJAA,ACAA,KXjBI;AIgBJ,ALCA,ADPI,AWQJ,ATjBG,AciBH,AJAA,ACAA,SbRUI,GAAN,EAAW;AMOf,ALCA,ADPQP,AWQR,ATjBC,AciBD,AJAA,ACAA,IbRQA,YAAY,GAAGF,KAAf;AMOR,ALCA,ADPQA,AWQR,AKAA,AJAA,ACAA,IbRQA,KAAK,GAAG,EAAR;AMOR,ALCA,AUCA,ATjBAf,AciBA,AJAA,ACAA,MXjBM,CAACC,OAAP,CAAewF,MAAf,GAAwBA,MAAxB;AIgBA,ALCA,ADRQ,AWSR,ATjBAzF,AciBA,AJAA,ACAA,MXjBM,CAACC,IFQQ,EAAEiB,CERjB,CAAekD,KAAf,GFQe,AERQA,GFQO5C,EER9B,CFQQ,EAA2B;AMQnC,ALCA,ADRY,AWSZ,AKAA,AJAA,ACAA,UbTgBP,YAAJ,EAAkB;AMQ9B,ALCA,ADRgBA,AWShB,AKAA,AJAA,ACAA,QbTgBA,YAAY,CAACC,UAAD,CAAZ,CAAyBO,GAAzB;AMQhB,ALCA,ADRa,AWSb,AKAA,AJAA,ACAA;APDA,ALCA,ADRS,AWST,AKAA,AJAA,ACAA;APDA,ALCA,AUCA,AKAA,AJAA,ACAA;APDA,ALCA,ADTQP,AWUR,AKAA,AJAA,ACAA,IbVQA,UAAU,GAAG,CAAC,CAAd;AMSR,ALCA,ADTQM,AWUR,AKAA,AJAA,ACAA,IbVQA,GAAG,GAAGT,KAAK,CAACK,MAAZ;AMSR,ALCA,ADTK,AWUL,AKAA,AJAA,ACAA;APDA,ALCA,AUCA,AKAA,AJAA,ACAA;APDA,ALCA,ADVIH,AWWJ,AKAA,AJAA,ACAA,EbXIA,YAAY,GAAG,IAAf;AMUJ,ALCA,ADVID,AWWJ,AKAA,AJAA,ACAA,EbXIA,QAAQ,GAAG,KAAX;AMUJ,ALCA,ADVIH,AWWJ,AKAA,AJAA,ACAA,EbXIA,eAAe,CAACU,OAAD,CAAf;AMUJ,ALCA,ADVC,AWWD,AKAA,AJAA,ACAA;APDA,ALCA,AUCA,AKAA,AJAA,ACAA;APDA,ALCA,ADVAxB,AWWA,AKAA,AJAA,ACAA,ObXO,CAAC2B,QAAR,GAAmB,UAAUf,GAAV,EAAe;AMUlC,ALCA,ADVI,AWWJ,AKAA,AJAA,ACAA,MbXQgB,IAAI,GAAG,IAAIC,KAAJ,CAAUC,SAAS,CAACT,MAAV,GAAmB,CAA7B,CAAX;AMUJ,ALCA,AUCA,AKAA,AJAA,ACAA;APDA,ALCA,ADXI,AWYJ,AKAA,AJAA,ACAA,MbZQS,SAAS,CAACT,MAAV,GAAmB,CAAvB,EAA0B;AMW9B,ALCA,ADXQ,AWYR,AKAA,AJAA,ACAA,SbZa,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C;AMWnD,ALCA,ADXYH,AWYZ,AKAA,AJAA,ACAA,MbZYA,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAcD,SAAS,CAACC,CAAD,CAAvB;AMWZ,ALCA,ADXS,AWYT,AKAA,AHAA;APDA,ALCA,ADXK,AWYL,AKAA,AHAA;APDA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADZIf,AWaJ,AKAA,AHAA,EbbIA,KAAK,CAACgB,IAAN,CAAW,IAAIC,IAAJ,CAASrB,GAAT,EAAcgB,IAAd,CAAX;AMYJ,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADbI,AWcJ,AKAA,AHAA,MbdQZ,KAAK,CAACK,MAAN,KAAiB,CAAjB,IAAsB,CAACJ,QAA3B,EAAqC;AMazC,ALCA,ADbQN,AWcR,AKAA,AHAA,IbdQA,UAAU,CAACY,UAAD,CAAV;AMaR,ALCA,ADbK,AWcL,AKAA,AHAA;APDA,ALCA,ADbC,AWcD,AKAA,AHAA,CbzBA,EAaA;AMWA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADbA,AWcA,AKAA,AHAA,SbdSU,IAAT,CAAcrB,GAAd,EAAmBsB,KAAnB,EAA0B;AMa1B,ALCA,ADbI,AWcJ,AKAA,AHAA,ObdStB,GAAL,GAAWA,GAAX;AMaJ,ALCA,ADbI,AWcJ,AKAA,AHAA,ObdSsB,KAAL,GAAaA,KAAb;AMaJ,ALCA,ADbC,AWcD,AKAA,AHAA;APDA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADdAD,AWeA,AKAA,AHAA,IbfI,CAACE,SAAL,CAAeT,GAAf,GAAqB,YAAY;AMcjC,ALCA,ADdI,AWeJ,AKAA,AHAA,ObfSd,GAAL,CAASwB,KAAT,CAAe,IAAf,EAAqB,KAAKF,KAA1B;AMcJ,ALCA,ADdC,AWeD,AKAA,AHAA,CbjBA;AMgBA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADfAlC,AWgBA,AKAA,AHAA,ObhBO,CAACqC,KAAR,GAAgB,SAAhB;AMeA,ALCA,ADdArC,AWeA,AKAA,AHAA,ObfO,CAACsC,GAAR,GAAc,EAAd;AMcA,ALCA,ADdAtC,AWeA,AKAA,AHAA,ObfO,CAACuC,IAAR,GAAe,EAAf;AMcA,ALCA,ADdAvC,AWeA,AKAA,AHAA,ObfO,CAACwC,OAAR,GAAkB,EAAlB,EAAsB;AMctB,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADfAxC,AWgBA,AKAA,AHAA,ObhBO,CAACyC,QAAR,GAAmB,EAAnB;AMeA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADfA,AWgBA,AKAA,AHAA,SbhBSC,IAAT,GAAgB,CAAE;AMelB,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAAC2C,EAAR,GAAaD,IAAb;AMeA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAAC4C,WAAR,GAAsBF,IAAtB;AMeA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAAC6C,IAAR,GAAeH,IAAf;AMeA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAAC8C,GAAR,GAAcJ,IAAd;AMeA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAAC+C,cAAR,GAAyBL,IAAzB;AMeA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAACgD,kBAAR,GAA6BN,IAA7B;AMeA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAACiD,IAAR,GAAeP,IAAf;AMeA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAACkD,eAAR,GAA0BR,IAA1B;AMeA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAACmD,mBAAR,GAA8BT,IAA9B;AMeA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADfA1C,AWgBA,AKAA,AHAA,ObhBO,CAACoD,SAAR,GAAoB,UAAUC,IAAV,EAAgB;AMepC,ALCA,ADhBsC,AWiBtC,AKAA,AHAA,SbjB6C,EAAP;AMgBtC,ALCA,ADjBiD,AWkBjD,AKAA,AHAA,CblBA;AMiBA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADjBArD,AWkBA,AKAA,AHAA,OblBO,CAACsD,OAAR,GAAkB,UAAUD,IAAV,EAAgB;AMiBlC,ALCA,ADjBI,AWkBJ,AKAA,AHAA,QblBU,IAAI/C,KAAJ,CAAU,kCAAV,CAAN;AMiBJ,ALCA,ADjBC,AWkBD,AKAA,AHAA,CbpBA;AMmBA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADjBAN,AWkBA,AKAA,AHAA,OblBO,CAACuD,GAAR,GAAc,YAAY;AMiB1B,ALCA,ADlB4B,AWmB5B,AKAA,AHAA,SbnBmC,GAAP;AMkB5B,ALCA,ADnBwC,AWoBxC,AKAA,AHAA,CbpBA;AMmBA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADpBAvD,AWqBA,AKAA,AHAA,ObrBO,CAACwD,KAAR,GAAgB,UAAUC,GAAV,EAAe;AMoB/B,ALCA,ADpBI,AWqBJ,AKAA,AHAA,QbrBU,IAAInD,KAAJ,CAAU,gCAAV,CAAN;AMoBJ,ALCA,ADpBC,AWqBD,AKAA,AHAA,CbvBA;AMsBA,ALCA,AUCA,AKAA,AHAA;APDA,ALCA,ADrBAN,AWsBA,AKAA,AHAA,ObtBO,CAAC0D,KAAR,GAAgB,YAAW;AMqB3B,ALCA,ADtB6B,AWuB7B,AKAA,AHAA,SbvBoC,CAAP;AMsB7B,ALCA,ADvBwC,AWwBxC,AKAA,AHAA,CbxBA;AMufile":"leaderboard.c520a2b6.js","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\n|\\r|\\r\\n/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = options.path\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n","'use strict';\n\nmodule.exports = function func() {\n    var args = Array.apply(null, arguments),\n        name = args.shift(),\n        tab = '  ',\n        lines = '',\n        vars = '',\n        ind = 1,    // indentation\n        bs = '{[',  // block start\n        be = '}]',  // block end\n        space = function () {\n            var sp = tab, i = 0;\n            while (i++ < ind - 1) { sp += tab; }\n            return sp;\n        },\n        add = function (line) {\n            lines += space() + line + '\\n';\n        },\n        builder = function (line) {\n            var first = line[0],\n                last = line[line.length - 1];\n\n            if (be.indexOf(first) > -1 && bs.indexOf(last) > -1) {\n                ind--;\n                add(line);\n                ind++;\n            }\n            else if (bs.indexOf(last) > -1) {\n                add(line);\n                ind++;\n            }\n            else if (be.indexOf(first) > -1) {\n                ind--;\n                add(line);\n            }\n            else {\n                add(line);\n            }\n\n            return builder;\n        };\n\n    builder.def = function (id, def) {\n        vars += (vars ? ',\\n' + tab + '    ' : '') + id + (def !== undefined ? ' = ' + def : '');\n        return builder;\n    };\n\n    builder.toSource = function () {\n        return 'function ' + name + '(' + args.join(', ') + ') {\\n' +\n            tab + '\"use strict\"' + '\\n' +\n            (vars ? tab + 'var ' + vars + ';\\n' : '') +\n            lines + '}';\n    };\n\n    builder.compile = function (scope) {\n        var src = 'return (' + builder.toSource() + ')',\n            scp = scope || {},\n            keys = Object.keys(scp),\n            vals = keys.map(function (key) { return scp[key]; });\n\n        return Function.apply(null, keys.concat(src)).apply(null, vals);\n    };\n\n    return builder;\n};","'use strict';\n\nfunction type(obj) {\n    var str = Object.prototype.toString.call(obj);\n    return str.substr(8, str.length - 9).toLowerCase();\n}\n\nfunction deepEqual(a, b) {\n    var keysA = Object.keys(a).sort(),\n        keysB = Object.keys(b).sort(),\n        i, key;\n\n    if (!equal(keysA, keysB)) {\n        return false;\n    }\n\n    for (i = 0; i < keysA.length; i++) {\n        key = keysA[i];\n\n        if (!equal(a[key], b[key])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction equal(a, b) {  // jshint ignore: line\n    var typeA = typeof a,\n        typeB = typeof b,\n        i;\n\n    // get detailed object type\n    if (typeA === 'object') {\n        typeA = type(a);\n    }\n\n    // get detailed object type\n    if (typeB === 'object') {\n        typeB = type(b);\n    }\n\n    if (typeA !== typeB) {\n        return false;\n    }\n\n    if (typeA === 'object') {\n        return deepEqual(a, b);\n    }\n\n    if (typeA === 'regexp') {\n        return a.toString() === b.toString();\n    }\n\n    if (typeA === 'array') {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (i = 0; i < a.length; i++) {\n            if (!equal(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    return a === b;\n}\n\nmodule.exports = equal;","'use strict';\n\nvar equal = require('./equal.js');\n\nfunction findIndex(arr, value, comparator) {\n    for (var i = 0, len = arr.length; i < len; i++) {\n        if (comparator(arr[i], value)) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nmodule.exports = function unique(arr) {\n    return arr.filter(function uniqueOnly(value, index, self) {\n        return findIndex(self, value, equal) === index;\n    });\n};\n\nmodule.exports.findIndex = findIndex;","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","module.exports = {\n    \"id\": \"http://json-schema.org/draft-04/schema#\",\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"description\": \"Core schema meta-schema\",\n    \"definitions\": {\n        \"schemaArray\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"items\": { \"$ref\": \"#\" }\n        },\n        \"positiveInteger\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n        },\n        \"positiveIntegerDefault0\": {\n            \"allOf\": [ { \"$ref\": \"#/definitions/positiveInteger\" }, { \"default\": 0 } ]\n        },\n        \"simpleTypes\": {\n            \"enum\": [ \"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\" ]\n        },\n        \"stringArray\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" },\n            \"minItems\": 1,\n            \"uniqueItems\": true\n        }\n    },\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n        },\n        \"$schema\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n        },\n        \"title\": {\n            \"type\": \"string\"\n        },\n        \"description\": {\n            \"type\": \"string\"\n        },\n        \"default\": {},\n        \"multipleOf\": {\n            \"type\": \"number\",\n            \"minimum\": 0,\n            \"exclusiveMinimum\": true\n        },\n        \"maximum\": {\n            \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n            \"type\": \"boolean\",\n            \"default\": false\n        },\n        \"minimum\": {\n            \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n            \"type\": \"boolean\",\n            \"default\": false\n        },\n        \"maxLength\": { \"$ref\": \"#/definitions/positiveInteger\" },\n        \"minLength\": { \"$ref\": \"#/definitions/positiveIntegerDefault0\" },\n        \"pattern\": {\n            \"type\": \"string\",\n            \"format\": \"regex\"\n        },\n        \"additionalItems\": {\n            \"anyOf\": [\n                { \"type\": \"boolean\" },\n                { \"$ref\": \"#\" }\n            ],\n            \"default\": {}\n        },\n        \"items\": {\n            \"anyOf\": [\n                { \"$ref\": \"#\" },\n                { \"$ref\": \"#/definitions/schemaArray\" }\n            ],\n            \"default\": {}\n        },\n        \"maxItems\": { \"$ref\": \"#/definitions/positiveInteger\" },\n        \"minItems\": { \"$ref\": \"#/definitions/positiveIntegerDefault0\" },\n        \"uniqueItems\": {\n            \"type\": \"boolean\",\n            \"default\": false\n        },\n        \"maxProperties\": { \"$ref\": \"#/definitions/positiveInteger\" },\n        \"minProperties\": { \"$ref\": \"#/definitions/positiveIntegerDefault0\" },\n        \"required\": { \"$ref\": \"#/definitions/stringArray\" },\n        \"additionalProperties\": {\n            \"anyOf\": [\n                { \"type\": \"boolean\" },\n                { \"$ref\": \"#\" }\n            ],\n            \"default\": {}\n        },\n        \"definitions\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"$ref\": \"#\" },\n            \"default\": {}\n        },\n        \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"$ref\": \"#\" },\n            \"default\": {}\n        },\n        \"patternProperties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"$ref\": \"#\" },\n            \"default\": {}\n        },\n        \"dependencies\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    { \"$ref\": \"#\" },\n                    { \"$ref\": \"#/definitions/stringArray\" }\n                ]\n            }\n        },\n        \"enum\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"uniqueItems\": true\n        },\n        \"type\": {\n            \"anyOf\": [\n                { \"$ref\": \"#/definitions/simpleTypes\" },\n                {\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/definitions/simpleTypes\" },\n                    \"minItems\": 1,\n                    \"uniqueItems\": true\n                }\n            ]\n        },\n        \"allOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"anyOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"oneOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"not\": { \"$ref\": \"#\" }\n    },\n    \"dependencies\": {\n        \"exclusiveMaximum\": [ \"maximum\" ],\n        \"exclusiveMinimum\": [ \"minimum\" ]\n    },\n    \"default\": {}\n};","'use strict';\n\nvar url = require('url'),\n    metaschema = require('./metaschema.json'),\n    INVALID_SCHEMA_REFERENCE = 'jsen: invalid schema reference',\n    DUPLICATE_SCHEMA_ID = 'jsen: duplicate schema id',\n    CIRCULAR_SCHEMA_REFERENCE = 'jsen: circular schema reference';\n\nfunction get(obj, path) {\n    if (!path.length) {\n        return obj;\n    }\n\n    var key = path.shift(),\n        val;\n\n    if (obj && typeof obj === 'object' && obj.hasOwnProperty(key)) {\n        val = obj[key];\n    }\n\n    if (path.length) {\n        if (val && typeof val === 'object') {\n            return get(val, path);\n        }\n\n        return undefined;\n    }\n\n    return val;\n}\n\nfunction refToObj(ref) {\n    var index = ref.indexOf('#'),\n        ret = {\n            base: ref.substr(0, index),\n            path: []\n        };\n\n    if (index < 0) {\n        ret.base = ref;\n        return ret;\n    }\n\n    ref = ref.substr(index + 1);\n\n    if (!ref) {\n        return ret;\n    }\n\n    ret.path = ref.split('/').map(function (segment) {\n        // Reference: http://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-08#section-3\n        return decodeURIComponent(segment)\n            .replace(/~1/g, '/')\n            .replace(/~0/g, '~');\n    });\n\n    if (ref[0] === '/') {\n        ret.path.shift();\n    }\n\n    return ret;\n}\n\n// TODO: Can we prevent nested resolvers and combine schemas instead?\nfunction SchemaResolver(rootSchema, external, missing$Ref, baseId) {  // jshint ignore: line\n    this.rootSchema = rootSchema;\n    this.resolvers = null;\n    this.resolvedRootSchema = null;\n    this.cache = {};\n    this.idCache = {};\n    this.refCache = { refs: [], schemas: [] };\n    this.missing$Ref = missing$Ref;\n    this.refStack = [];\n\n    baseId = baseId || '';\n\n    this._buildIdCache(rootSchema, baseId);\n\n    // get updated base id after normalizing root schema id\n    baseId = this.refCache.refs[this.refCache.schemas.indexOf(this.rootSchema)] || baseId;\n\n    this._buildResolvers(external, baseId);\n}\n\nSchemaResolver.prototype._cacheId = function (id, schema, resolver) {\n    if (this.idCache[id]) {\n        throw new Error(DUPLICATE_SCHEMA_ID + ' ' + id);\n    }\n\n    this.idCache[id] = { resolver: resolver, schema: schema };\n};\n\nSchemaResolver.prototype._buildIdCache = function (schema, baseId) {\n    var id = baseId,\n        ref, keys, i;\n\n    if (!schema || typeof schema !== 'object') {\n        return;\n    }\n\n    if (typeof schema.id === 'string' && schema.id) {\n        id = url.resolve(baseId, schema.id);\n\n        this._cacheId(id, schema, this);\n    }\n    else if (schema === this.rootSchema && baseId) {\n        this._cacheId(baseId, schema, this);\n    }\n\n    if (schema.$ref && typeof schema.$ref === 'string') {\n        ref = url.resolve(id, schema.$ref);\n\n        this.refCache.schemas.push(schema);\n        this.refCache.refs.push(ref);\n    }\n\n    keys = Object.keys(schema);\n\n    for (i = 0; i < keys.length; i++) {\n        this._buildIdCache(schema[keys[i]], id);\n    }\n};\n\nSchemaResolver.prototype._buildResolvers = function (schemas, baseId) {\n    if (!schemas || typeof schemas !== 'object') {\n        return;\n    }\n\n    var that = this,\n        resolvers = {};\n\n    Object.keys(schemas).forEach(function (key) {\n        var id = url.resolve(baseId, key),\n            resolver = new SchemaResolver(schemas[key], null, that.missing$Ref, id);\n\n        that._cacheId(id, resolver.rootSchema, resolver);\n\n        Object.keys(resolver.idCache).forEach(function (idKey) {\n            that.idCache[idKey] = resolver.idCache[idKey];\n        });\n\n        resolvers[key] = resolver;\n    });\n\n    this.resolvers = resolvers;\n};\n\nSchemaResolver.prototype.getNormalizedRef = function (schema) {\n    var index = this.refCache.schemas.indexOf(schema);\n    return this.refCache.refs[index];\n};\n\nSchemaResolver.prototype._resolveRef = function (ref) {\n    var err = new Error(INVALID_SCHEMA_REFERENCE + ' ' + ref),\n        idCache = this.idCache,\n        externalResolver, cached, descriptor, path, dest;\n\n    if (!ref || typeof ref !== 'string') {\n        throw err;\n    }\n\n    if (ref === metaschema.id) {\n        dest = metaschema;\n    }\n\n    cached = idCache[ref];\n\n    if (cached) {\n        dest = cached.resolver.resolve(cached.schema);\n    }\n\n    if (dest === undefined) {\n        descriptor = refToObj(ref);\n        path = descriptor.path;\n\n        if (descriptor.base) {\n            cached = idCache[descriptor.base] || idCache[descriptor.base + '#'];\n\n            if (cached) {\n                dest = cached.resolver.resolve(get(cached.schema, path.slice(0)));\n            }\n            else {\n                path.unshift(descriptor.base);\n            }\n        }\n    }\n\n    if (dest === undefined && this.resolvedRootSchema) {\n        dest = get(this.resolvedRootSchema, path.slice(0));\n    }\n\n    if (dest === undefined) {\n        dest = get(this.rootSchema, path.slice(0));\n    }\n\n    if (dest === undefined && path.length && this.resolvers) {\n        externalResolver = get(this.resolvers, path);\n\n        if (externalResolver) {\n            dest = externalResolver.resolve(externalResolver.rootSchema);\n        }\n    }\n\n    if (dest === undefined || typeof dest !== 'object') {\n        if (this.missing$Ref) {\n            dest = {};\n        } else {\n            throw err;\n        }\n    }\n\n    if (this.cache[ref] === dest) {\n        return dest;\n    }\n\n    this.cache[ref] = dest;\n\n    if (dest.$ref !== undefined) {\n        dest = this.resolve(dest);\n    }\n\n    return dest;\n};\n\nSchemaResolver.prototype.resolve = function (schema) {\n    if (!schema || typeof schema !== 'object' || schema.$ref === undefined) {\n        return schema;\n    }\n\n    var ref = this.getNormalizedRef(schema) || schema.$ref,\n        resolved = this.cache[ref];\n\n    if (resolved !== undefined) {\n        return resolved;\n    }\n\n    if (this.refStack.indexOf(ref) > -1) {\n        throw new Error(CIRCULAR_SCHEMA_REFERENCE + ' ' + ref);\n    }\n\n    this.refStack.push(ref);\n\n    resolved = this._resolveRef(ref);\n\n    this.refStack.pop();\n\n    if (schema === this.rootSchema) {\n        // cache the resolved root schema\n        this.resolvedRootSchema = resolved;\n    }\n\n    return resolved;\n};\n\nSchemaResolver.prototype.hasRef = function (schema) {\n    var keys = Object.keys(schema),\n        len, key, i, hasChildRef;\n\n    if (keys.indexOf('$ref') > -1) {\n        return true;\n    }\n\n    for (i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n\n        if (schema[key] && typeof schema[key] === 'object' && !Array.isArray(schema[key])) {\n            hasChildRef = this.hasRef(schema[key]);\n\n            if (hasChildRef) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n};\n\nSchemaResolver.resolvePointer = function (obj, pointer) {\n    var descriptor = refToObj(pointer),\n        path = descriptor.path;\n\n    if (descriptor.base) {\n        path = [descriptor.base].concat(path);\n    }\n\n    return get(obj, path);\n};\n\nmodule.exports = SchemaResolver;","'use strict';\n\nvar formats = {};\n\n// reference: http://dansnetwork.com/javascript-iso8601rfc3339-date-parser/\nformats['date-time'] = /(\\d\\d\\d\\d)(-)?(\\d\\d)(-)?(\\d\\d)(T)?(\\d\\d)(:)?(\\d\\d)(:)?(\\d\\d)(\\.\\d+)?(Z|([+-])(\\d\\d)(:)?(\\d\\d))/;\n// reference: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js#L7\nformats.uri = /^([a-zA-Z][a-zA-Z0-9+-.]*:){0,1}\\/\\/[^\\s]*$/;\n// reference: http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n//            http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\nformats.email = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// reference: https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\nformats.ipv4 = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n// reference: http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\nformats.ipv6 = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|[fF][eE]80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::([fF]{4}(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\n// reference: http://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address#answer-3824105\nformats.hostname = /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]))*$/;\n\nmodule.exports = formats;","'use strict';\n\n// Reference: https://github.com/bestiejs/punycode.js/blob/master/punycode.js#L101`\n// Info: https://mathiasbynens.be/notes/javascript-unicode\nfunction ucs2length(string) {\n    var ucs2len = 0,\n        counter = 0,\n        length = string.length,\n        value, extra;\n\n    while (counter < length) {\n        ucs2len++;\n        value = string.charCodeAt(counter++);\n\n        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n            // It's a high surrogate, and there is a next character.\n            extra = string.charCodeAt(counter++);\n\n            if ((extra & 0xFC00) !== 0xDC00) { /* Low surrogate. */                 // jshint ignore: line\n                counter--;\n            }\n        }\n    }\n\n    return ucs2len;\n}\n\nmodule.exports = ucs2length;","'use strict';\n\nvar REGEX_ESCAPE_EXPR = /[\\/]/g,\n    STR_ESCAPE_EXPR = /(\")/gim,\n    VALID_IDENTIFIER_EXPR = /^[a-z_$][0-9a-z]*$/gi,\n    INVALID_SCHEMA = 'jsen: invalid schema object',\n    browser = typeof window === 'object' && !!window.navigator,   // jshint ignore: line\n    regescape = new RegExp('/').source !== '/', // node v0.x does not properly escape '/'s in inline regex\n    func = require('./func.js'),\n    equal = require('./equal.js'),\n    unique = require('./unique.js'),\n    SchemaResolver = require('./resolver.js'),\n    formats = require('./formats.js'),\n    ucs2length = require('./ucs2length.js'),\n    types = {},\n    keywords = {};\n\nfunction inlineRegex(regex) {\n    regex = regex instanceof RegExp ? regex : new RegExp(regex);\n\n    return regescape ?\n        regex.toString() :\n        '/' + regex.source.replace(REGEX_ESCAPE_EXPR, '\\\\$&') + '/';\n}\n\nfunction encodeStr(str) {\n    return '\"' + str.replace(STR_ESCAPE_EXPR, '\\\\$1') + '\"';\n}\n\nfunction appendToPath(path, key) {\n    VALID_IDENTIFIER_EXPR.lastIndex = 0;\n\n    return VALID_IDENTIFIER_EXPR.test(key) ?\n        path + '.' + key :\n        path + '[' + encodeStr(key) + ']';\n}\n\nfunction type(obj) {\n    if (obj === undefined) {\n        return 'undefined';\n    }\n\n    var str = Object.prototype.toString.call(obj);\n    return str.substr(8, str.length - 9).toLowerCase();\n}\n\nfunction isInteger(obj) {\n    return (obj | 0) === obj;   // jshint ignore: line\n}\n\ntypes['null'] = function (path) {\n    return path + ' === null';\n};\n\ntypes.boolean = function (path) {\n    return 'typeof ' + path + ' === \"boolean\"';\n};\n\ntypes.string = function (path) {\n    return 'typeof ' + path + ' === \"string\"';\n};\n\ntypes.number = function (path) {\n    return 'typeof ' + path + ' === \"number\"';\n};\n\ntypes.integer = function (path) {\n    return 'typeof ' + path + ' === \"number\" && !(' + path + ' % 1)';\n};\n\ntypes.array = function (path) {\n    return 'Array.isArray(' + path + ')';\n};\n\ntypes.object = function (path) {\n    return 'typeof ' + path + ' === \"object\" && ' + path + ' !== null && !Array.isArray(' + path + ')';\n};\n\ntypes.date = function (path) {\n    return path + ' instanceof Date';\n};\n\nkeywords.enum = function (context) {\n    var arr = context.schema['enum'];\n\n    context.code('if (!equalAny(' + context.path + ', ' + JSON.stringify(arr) + ')) {');\n    context.error('enum');\n    context.code('}');\n};\n\nkeywords.minimum = function (context) {\n    if (typeof context.schema.minimum === 'number') {\n        context.code('if (' + context.path + ' < ' + context.schema.minimum + ') {');\n        context.error('minimum');\n        context.code('}');\n    }\n};\n\nkeywords.exclusiveMinimum = function (context) {\n    if (context.schema.exclusiveMinimum === true && typeof context.schema.minimum === 'number') {\n        context.code('if (' + context.path + ' === ' + context.schema.minimum + ') {');\n        context.error('exclusiveMinimum');\n        context.code('}');\n    }\n};\n\nkeywords.maximum = function (context) {\n    if (typeof context.schema.maximum === 'number') {\n        context.code('if (' + context.path + ' > ' + context.schema.maximum + ') {');\n        context.error('maximum');\n        context.code('}');\n    }\n};\n\nkeywords.exclusiveMaximum = function (context) {\n    if (context.schema.exclusiveMaximum === true && typeof context.schema.maximum === 'number') {\n        context.code('if (' + context.path + ' === ' + context.schema.maximum + ') {');\n        context.error('exclusiveMaximum');\n        context.code('}');\n    }\n};\n\nkeywords.multipleOf = function (context) {\n    if (typeof context.schema.multipleOf === 'number') {\n        var mul = context.schema.multipleOf,\n            decimals = mul.toString().length - mul.toFixed(0).length - 1,\n            pow = decimals > 0 ? Math.pow(10, decimals) : 1,\n            path = context.path;\n\n        if (decimals > 0) {\n            context.code('if (+(Math.round((' + path + ' * ' + pow + ') + \"e+\" + ' + decimals + ') + \"e-\" + ' + decimals + ') % ' + (mul * pow) + ' !== 0) {');\n        } else {\n            context.code('if (((' + path + ' * ' + pow + ') % ' + (mul * pow) + ') !== 0) {');\n        }\n\n        context.error('multipleOf');\n        context.code('}');\n    }\n};\n\nkeywords.minLength = function (context) {\n    if (isInteger(context.schema.minLength)) {\n        context.code('if (ucs2length(' + context.path + ') < ' + context.schema.minLength + ') {');\n        context.error('minLength');\n        context.code('}');\n    }\n};\n\nkeywords.maxLength = function (context) {\n    if (isInteger(context.schema.maxLength)) {\n        context.code('if (ucs2length(' + context.path + ') > ' + context.schema.maxLength + ') {');\n        context.error('maxLength');\n        context.code('}');\n    }\n};\n\nkeywords.pattern = function (context) {\n    var pattern = context.schema.pattern;\n\n    if (typeof pattern === 'string' || pattern instanceof RegExp) {\n        context.code('if (!(' + inlineRegex(pattern) + ').test(' + context.path + ')) {');\n        context.error('pattern');\n        context.code('}');\n    }\n};\n\nkeywords.format = function (context) {\n    if (typeof context.schema.format !== 'string' || !formats[context.schema.format]) {\n        return;\n    }\n\n    context.code('if (!(' + formats[context.schema.format] + ').test(' + context.path + ')) {');\n    context.error('format');\n    context.code('}');\n};\n\nkeywords.minItems = function (context) {\n    if (isInteger(context.schema.minItems)) {\n        context.code('if (' + context.path + '.length < ' + context.schema.minItems + ') {');\n        context.error('minItems');\n        context.code('}');\n    }\n};\n\nkeywords.maxItems = function (context) {\n    if (isInteger(context.schema.maxItems)) {\n        context.code('if (' + context.path + '.length > ' + context.schema.maxItems + ') {');\n        context.error('maxItems');\n        context.code('}');\n    }\n};\n\nkeywords.additionalItems = function (context) {\n    if (context.schema.additionalItems === false && Array.isArray(context.schema.items)) {\n        context.code('if (' + context.path + '.length > ' + context.schema.items.length + ') {');\n        context.error('additionalItems');\n        context.code('}');\n    }\n};\n\nkeywords.uniqueItems = function (context) {\n    if (context.schema.uniqueItems) {\n        context.code('if (unique(' + context.path + ').length !== ' + context.path + '.length) {');\n        context.error('uniqueItems');\n        context.code('}');\n    }\n};\n\nkeywords.items = function (context) {\n    var index = context.declare(0),\n        i = 0;\n\n    if (type(context.schema.items) === 'object') {\n        context.code('for (' + index + ' = 0; ' + index + ' < ' + context.path + '.length; ' + index + '++) {');\n\n        context.descend(context.path + '[' + index + ']', context.schema.items);\n\n        context.code('}');\n    }\n    else if (Array.isArray(context.schema.items)) {\n        for (; i < context.schema.items.length; i++) {\n            context.code('if (' + context.path + '.length - 1 >= ' + i + ') {');\n\n            context.descend(context.path + '[' + i + ']', context.schema.items[i]);\n\n            context.code('}');\n        }\n\n        if (type(context.schema.additionalItems) === 'object') {\n            context.code('for (' + index + ' = ' + i + '; ' + index + ' < ' + context.path + '.length; ' + index + '++) {');\n\n            context.descend(context.path + '[' + index + ']', context.schema.additionalItems);\n\n            context.code('}');\n        }\n    }\n};\n\nkeywords.maxProperties = function (context) {\n    if (isInteger(context.schema.maxProperties)) {\n        context.code('if (Object.keys(' + context.path + ').length > ' + context.schema.maxProperties + ') {');\n        context.error('maxProperties');\n        context.code('}');\n    }\n};\n\nkeywords.minProperties = function (context) {\n    if (isInteger(context.schema.minProperties)) {\n        context.code('if (Object.keys(' + context.path + ').length < ' + context.schema.minProperties + ') {');\n        context.error('minProperties');\n        context.code('}');\n    }\n};\n\nkeywords.required = function (context) {\n    var required = context.schema.required,\n        properties = context.schema.properties,\n        i;\n\n    if (!Array.isArray(required)) {\n        return;\n    }\n\n    for (i = 0; i < required.length; i++) {\n        if (properties && properties[required[i]] && typeof properties[required[i]] === 'object') {\n            continue;\n        }\n\n        context.code('if (' + appendToPath(context.path, required[i]) + ' === undefined) {');\n        context.error('required', required[i]);\n        context.code('}');\n    }\n};\n\nkeywords.properties = function (context) {\n    var props = context.schema.properties,\n        propKeys = type(props) === 'object' ? Object.keys(props) : [],\n        required = Array.isArray(context.schema.required) ? context.schema.required : [],\n        prop, i, nestedPath;\n\n    if (!propKeys.length) {\n        return;\n    }\n\n    for (i = 0; i < propKeys.length; i++) {\n        prop = propKeys[i];\n        nestedPath = appendToPath(context.path, prop);\n\n        context.code('if (' + nestedPath + ' !== undefined) {');\n\n        context.descend(nestedPath, props[prop]);\n\n        context.code('}');\n\n        if (required.indexOf(prop) > -1) {\n            context.code('else {');\n            context.error('required', prop);\n            context.code('}');\n        }\n    }\n};\n\nkeywords.patternProperties = keywords.additionalProperties = function (context) {\n    var propKeys = type(context.schema.properties) === 'object' ?\n            Object.keys(context.schema.properties) : [],\n        patProps = context.schema.patternProperties,\n        patterns = type(patProps) === 'object' ? Object.keys(patProps) : [],\n        addProps = context.schema.additionalProperties,\n        addPropsCheck = addProps === false || type(addProps) === 'object',\n        props, keys, key, n, found, pattern, i;\n\n    if (!patterns.length && !addPropsCheck) {\n        return;\n    }\n\n    keys = context.declare('[]');\n    key = context.declare('\"\"');\n    n = context.declare(0);\n\n    if (addPropsCheck) {\n        found = context.declare(false);\n    }\n\n    context.code(keys + ' = Object.keys(' + context.path + ')');\n\n    context.code('for (' + n + ' = 0; ' + n + ' < ' + keys + '.length; ' + n + '++) {')\n        (key + ' = ' + keys + '[' + n + ']')\n\n        ('if (' + context.path + '[' + key + '] === undefined) {')\n            ('continue')\n        ('}');\n\n    if (addPropsCheck) {\n        context.code(found + ' = false');\n    }\n\n    // validate pattern properties\n    for (i = 0; i < patterns.length; i++) {\n        pattern = patterns[i];\n\n        context.code('if ((' + inlineRegex(pattern) + ').test(' + key + ')) {');\n\n        context.descend(context.path + '[' + key + ']', patProps[pattern]);\n\n        if (addPropsCheck) {\n            context.code(found + ' = true');\n        }\n\n        context.code('}');\n    }\n\n    // validate additional properties\n    if (addPropsCheck) {\n        if (propKeys.length) {\n            props = context.declare(JSON.stringify(propKeys));\n\n            // do not validate regular properties\n            context.code('if (' + props + '.indexOf(' + key + ') > -1) {')\n                ('continue')\n            ('}');\n        }\n\n        context.code('if (!' + found + ') {');\n\n        if (addProps === false) {\n            // do not allow additional properties\n            context.error('additionalProperties', undefined, key);\n        }\n        else {\n            // validate additional properties\n            context.descend(context.path + '[' + key + ']', addProps);\n        }\n\n        context.code('}');\n    }\n\n    context.code('}');\n};\n\nkeywords.dependencies = function (context) {\n    if (type(context.schema.dependencies) !== 'object') {\n        return;\n    }\n\n    var depKeys = Object.keys(context.schema.dependencies),\n        len = depKeys.length,\n        key, dep, i = 0, k = 0;\n\n    for (; k < len; k++) {\n        key = depKeys[k];\n        dep = context.schema.dependencies[key];\n\n        context.code('if (' + appendToPath(context.path, key) + ' !== undefined) {');\n\n        if (type(dep) === 'object') {\n            //schema dependency\n            context.descend(context.path, dep);\n        }\n        else {\n            // property dependency\n            for (i; i < dep.length; i++) {\n                context.code('if (' + appendToPath(context.path, dep[i]) + ' === undefined) {');\n                context.error('dependencies', dep[i]);\n                context.code('}');\n            }\n        }\n\n        context.code('}');\n    }\n};\n\nkeywords.allOf = function (context) {\n    if (!Array.isArray(context.schema.allOf)) {\n        return;\n    }\n\n    for (var i = 0; i < context.schema.allOf.length; i++) {\n        context.descend(context.path, context.schema.allOf[i]);\n    }\n};\n\nkeywords.anyOf = function (context) {\n    if (!Array.isArray(context.schema.anyOf)) {\n        return;\n    }\n\n    var greedy = context.greedy,\n        errCount = context.declare(0),\n        initialCount = context.declare(0),\n        found = context.declare(false),\n        i = 0;\n\n    context.code(initialCount + ' = errors.length');\n\n    for (; i < context.schema.anyOf.length; i++) {\n        context.code('if (!' + found + ') {');\n\n        context.code(errCount + ' = errors.length');\n\n        context.greedy = true;\n\n        context.descend(context.path, context.schema.anyOf[i]);\n\n        context.code(found + ' = errors.length === ' + errCount)\n        ('}');\n    }\n\n    context.greedy = greedy;\n\n    context.code('if (!' + found + ') {');\n\n    context.error('anyOf');\n\n    context.code('} else {')\n        ('errors.length = ' + initialCount)\n    ('}');\n};\n\nkeywords.oneOf = function (context) {\n    if (!Array.isArray(context.schema.oneOf)) {\n        return;\n    }\n\n    var greedy = context.greedy,\n        matching = context.declare(0),\n        initialCount = context.declare(0),\n        errCount = context.declare(0),\n        i = 0;\n\n    context.code(initialCount + ' = errors.length');\n    context.code(matching + ' = 0');\n\n    for (; i < context.schema.oneOf.length; i++) {\n        context.code(errCount + ' = errors.length');\n\n        context.greedy = true;\n\n        context.descend(context.path, context.schema.oneOf[i]);\n\n        context.code('if (errors.length === ' + errCount + ') {')\n            (matching + '++')\n        ('}');\n    }\n\n    context.greedy = greedy;\n\n    context.code('if (' + matching + ' !== 1) {');\n\n    context.error('oneOf');\n\n    context.code('} else {')\n        ('errors.length = ' + initialCount)\n    ('}');\n};\n\nkeywords.not = function (context) {\n    if (type(context.schema.not) !== 'object') {\n        return;\n    }\n\n    var greedy = context.greedy,\n        errCount = context.declare(0);\n\n    context.code(errCount + ' = errors.length');\n\n    context.greedy = true;\n\n    context.descend(context.path, context.schema.not);\n\n    context.greedy = greedy;\n\n    context.code('if (errors.length === ' + errCount + ') {');\n\n    context.error('not');\n\n    context.code('} else {')\n        ('errors.length = ' + errCount)\n    ('}');\n};\n\nfunction decorateGenerator(type, keyword) {\n    keywords[keyword].type = type;\n    keywords[keyword].keyword = keyword;\n}\n\n['minimum', 'exclusiveMinimum', 'maximum', 'exclusiveMaximum', 'multipleOf']\n    .forEach(decorateGenerator.bind(null, 'number'));\n\n['minLength', 'maxLength', 'pattern', 'format']\n    .forEach(decorateGenerator.bind(null, 'string'));\n\n['minItems', 'maxItems', 'additionalItems', 'uniqueItems', 'items']\n    .forEach(decorateGenerator.bind(null, 'array'));\n\n['maxProperties', 'minProperties', 'required', 'properties', 'patternProperties', 'additionalProperties', 'dependencies']\n    .forEach(decorateGenerator.bind(null, 'object'));\n\n['enum', 'allOf', 'anyOf', 'oneOf', 'not']\n    .forEach(decorateGenerator.bind(null, null));\n\nfunction groupKeywords(schema) {\n    var keys = Object.keys(schema),\n        patIndex = keys.indexOf('patternProperties'),\n        ret = {\n            enum: Array.isArray(schema.enum) && schema.enum.length > 0,\n            type: null,\n            allType: [],\n            perType: {}\n        },\n        key, gen, i;\n\n    if (schema.type) {\n        if (typeof schema.type === 'string') {\n            ret.type = [schema.type];\n        }\n        else if (Array.isArray(schema.type) && schema.type.length) {\n            ret.type = schema.type.slice(0);\n        }\n    }\n\n    for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n\n        if (key === 'enum' || key === 'type') {\n            continue;\n        }\n\n        gen = keywords[key];\n\n        if (!gen) {\n            continue;\n        }\n\n        if (gen.type) {\n            if (!ret.perType[gen.type]) {\n                ret.perType[gen.type] = [];\n            }\n\n            if (!(patIndex > -1 && key === 'additionalProperties')) {\n                ret.perType[gen.type].push(key);\n            }\n        }\n        else {\n            ret.allType.push(key);\n        }\n    }\n\n    return ret;\n}\n\nfunction getPathExpression(path, key) {\n    var path_ = path.substr(4),\n        len = path_.length,\n        tokens = [],\n        token = '',\n        isvar = false,\n        char, i;\n\n    for (i = 0; i < len; i++) {\n        char = path_[i];\n\n        switch (char) {\n            case '.':\n                if (token) {\n                    token += char;\n                }\n                break;\n            case '[':\n                if (isNaN(+path_[i + 1])) {\n                    isvar = true;\n\n                    if (token) {\n                        tokens.push('\"' + token + '\"');\n                        token = '';\n                    }\n                }\n                else {\n                    isvar = false;\n\n                    if (token) {\n                        token += '.';\n                    }\n                }\n                break;\n            case ']':\n                tokens.push(isvar ? token : '\"' + token + '\"');\n                token = '';\n                break;\n            default:\n                token += char;\n        }\n    }\n\n    if (token) {\n        tokens.push('\"' + token + '\"');\n    }\n\n    if (key) {\n        tokens.push('\"' + key + '\"');\n    }\n\n    if (tokens.length === 1 && isvar) {\n        return '\"\" + ' + tokens[0] + ' + \"\"';\n    }\n\n    return tokens.join(' + \".\" + ') || '\"\"';\n}\n\nfunction clone(obj) {\n    var cloned = obj,\n        objType = type(obj),\n        keys, len, key, i;\n\n    if (objType === 'object') {\n        cloned = {};\n        keys = Object.keys(obj);\n\n        for (i = 0, len = keys.length; i < len; i++) {\n            key = keys[i];\n            cloned[key] = clone(obj[key]);\n        }\n    }\n    else if (objType === 'array') {\n        cloned = [];\n\n        for (i = 0, len = obj.length; i < len; i++) {\n            cloned[i] = clone(obj[i]);\n        }\n    }\n    else if (objType === 'regexp') {\n        return new RegExp(obj);\n    }\n    else if (objType === 'date') {\n        return new Date(obj.toJSON());\n    }\n\n    return cloned;\n}\n\nfunction equalAny(obj, options) {\n    for (var i = 0, len = options.length; i < len; i++) {\n        if (equal(obj, options[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction PropertyMarker() {\n    this.objects = [];\n    this.properties = [];\n}\n\nPropertyMarker.prototype.mark = function (obj, key) {\n    var index = this.objects.indexOf(obj),\n        prop;\n\n    if (index < 0) {\n        this.objects.push(obj);\n\n        prop = {};\n        prop[key] = 1;\n\n        this.properties.push(prop);\n\n        return;\n    }\n\n    prop = this.properties[index];\n\n    prop[key] = prop[key] ? prop[key] + 1 : 1;\n};\n\nPropertyMarker.prototype.deleteDuplicates = function () {\n    var props, keys, key, i, j;\n\n    for (i = 0; i < this.properties.length; i++) {\n        props = this.properties[i];\n        keys = Object.keys(props);\n\n        for (j = 0; j < keys.length; j++) {\n            key = keys[j];\n\n            if (props[key] > 1) {\n                delete this.objects[i][key];\n            }\n        }\n    }\n};\n\nPropertyMarker.prototype.dispose = function () {\n    this.objects.length = 0;\n    this.properties.length = 0;\n};\n\nfunction build(schema, def, additional, resolver, parentMarker) {\n    var defType, defValue, key, i, propertyMarker, props, defProps;\n\n    if (type(schema) !== 'object') {\n        return def;\n    }\n\n    schema = resolver.resolve(schema);\n\n    if (def === undefined && schema.hasOwnProperty('default')) {\n        def = clone(schema['default']);\n    }\n\n    defType = type(def);\n\n    if (defType === 'object' && type(schema.properties) === 'object') {\n        props = Object.keys(schema.properties);\n\n        for (i = 0; i < props.length; i++) {\n            key = props[i];\n            defValue = build(schema.properties[key], def[key], additional, resolver);\n\n            if (defValue !== undefined) {\n                def[key] = defValue;\n            }\n        }\n\n        if (additional !== 'always') {\n            defProps = Object.keys(def);\n\n            for (i = 0; i < defProps.length; i++) {\n                key = defProps[i];\n\n                if (props.indexOf(key) < 0 &&\n                    (schema.additionalProperties === false ||\n                    (additional === false && !schema.additionalProperties))) {\n\n                    if (parentMarker) {\n                        parentMarker.mark(def, key);\n                    }\n                    else {\n                        delete def[key];\n                    }\n                }\n            }\n        }\n    }\n    else if (defType === 'array' && schema.items) {\n        if (type(schema.items) === 'array') {\n            for (i = 0; i < schema.items.length; i++) {\n                defValue = build(schema.items[i], def[i], additional, resolver);\n\n                if (defValue !== undefined || i < def.length) {\n                    def[i] = defValue;\n                }\n            }\n        }\n        else if (def.length) {\n            for (i = 0; i < def.length; i++) {\n                def[i] = build(schema.items, def[i], additional, resolver);\n            }\n        }\n    }\n    else if (type(schema.allOf) === 'array' && schema.allOf.length) {\n        propertyMarker = new PropertyMarker();\n\n        for (i = 0; i < schema.allOf.length; i++) {\n            def = build(schema.allOf[i], def, additional, resolver, propertyMarker);\n        }\n\n        propertyMarker.deleteDuplicates();\n        propertyMarker.dispose();\n    }\n\n    return def;\n}\n\nfunction ValidationContext(options) {\n    this.path = 'data';\n    this.schema = options.schema;\n    this.formats = options.formats;\n    this.greedy = options.greedy;\n    this.resolver = options.resolver;\n    this.id = options.id;\n    this.funcache = options.funcache || {};\n    this.scope = options.scope || {\n        equalAny: equalAny,\n        unique: unique,\n        ucs2length: ucs2length,\n        refs: {}\n    };\n}\n\nValidationContext.prototype.clone = function (schema) {\n    var ctx = new ValidationContext({\n        schema: schema,\n        formats: this.formats,\n        greedy: this.greedy,\n        resolver: this.resolver,\n        id: this.id,\n        funcache: this.funcache,\n        scope: this.scope\n    });\n\n    return ctx;\n};\n\nValidationContext.prototype.declare = function (def) {\n    var variname = this.id();\n    this.code.def(variname, def);\n    return variname;\n};\n\nValidationContext.prototype.cache = function (cacheKey, schema) {\n    var cached = this.funcache[cacheKey],\n        context;\n\n    if (!cached) {\n        cached = this.funcache[cacheKey] = {\n            key: this.id()\n        };\n\n        context = this.clone(schema);\n\n        cached.func = context.compile(cached.key);\n\n        this.scope.refs[cached.key] = cached.func;\n\n        context.dispose();\n    }\n\n    return 'refs.' + cached.key;\n};\n\nValidationContext.prototype.error = function (keyword, key, additional) {\n    var schema = this.schema,\n        path = this.path,\n        errorPath = path !== 'data' || key ?\n            '(path ? path + \".\" : \"\") + ' + getPathExpression(path, key) + ',' :\n            'path,',\n        res = key && schema.properties && schema.properties[key] ?\n            this.resolver.resolve(schema.properties[key]) : null,\n        message = res ? res.requiredMessage : schema.invalidMessage;\n\n    if (!message) {\n        message = (res && res.messages && res.messages[keyword]) ||\n            (schema.messages && schema.messages[keyword]);\n    }\n\n    this.code('errors.push({');\n\n    if (message) {\n        this.code('message: ' + encodeStr(message) + ',');\n    }\n\n    if (additional) {\n        this.code('additionalProperties: ' + additional + ',');\n    }\n\n    this.code('path: ' + errorPath)\n        ('keyword: ' + encodeStr(keyword))\n    ('})');\n\n    if (!this.greedy) {\n        this.code('return');\n    }\n};\n\nValidationContext.prototype.refactor = function (path, schema, cacheKey) {\n    var parentPathExp = path !== 'data' ?\n            '(path ? path + \".\" : \"\") + ' + getPathExpression(path) :\n            'path',\n        cachedRef = this.cache(cacheKey, schema),\n        refErrors = this.declare();\n\n    this.code(refErrors + ' = ' + cachedRef + '(' + path + ', ' + parentPathExp + ', errors)');\n\n    if (!this.greedy) {\n        this.code('if (errors.length) { return }');\n    }\n};\n\nValidationContext.prototype.descend = function (path, schema) {\n    var origPath = this.path,\n        origSchema = this.schema;\n\n    this.path = path;\n    this.schema = schema;\n\n    this.generate();\n\n    this.path = origPath;\n    this.schema = origSchema;\n};\n\nValidationContext.prototype.generate = function () {\n    var path = this.path,\n        schema = this.schema,\n        context = this,\n        scope = this.scope,\n        encodedFormat,\n        format,\n        schemaKeys,\n        typeKeys,\n        typeIndex,\n        validatedType,\n        i;\n\n    if (type(schema) !== 'object') {\n        return;\n    }\n\n    if (schema.$ref !== undefined) {\n        schema = this.resolver.resolve(schema);\n\n        if (this.resolver.hasRef(schema)) {\n            this.refactor(path, schema,\n                this.resolver.getNormalizedRef(this.schema) || this.schema.$ref);\n\n            return;\n        }\n        else {\n            // substitute $ref schema with the resolved instance\n            this.schema = schema;\n        }\n    }\n\n    schemaKeys = groupKeywords(schema);\n\n    if (schemaKeys.enum) {\n        keywords.enum(context);\n\n        return; // do not process the schema further\n    }\n\n    typeKeys = Object.keys(schemaKeys.perType);\n\n    function generateForKeyword(keyword) {\n        keywords[keyword](context);    // jshint ignore: line\n    }\n\n    var hasType = (schemaKeys.type && schemaKeys.type.length);\n    if (hasType) {\n        this.code('if (!(' + schemaKeys.type.map(function (type) {\n            return types[type] ? types[type](path) : 'true';\n        }).join(' || ') + ')) {');\n        this.error('type');\n        this.code('}');\n    }\n\n    for (i = 0; i < typeKeys.length; i++) {\n        validatedType = typeKeys[i];\n\n        this.code((hasType ? 'else ' : '') + 'if (' + types[validatedType](path) + ') {');\n\n        schemaKeys.perType[validatedType].forEach(generateForKeyword);\n\n        this.code('}');\n\n        if (schemaKeys.type) {\n            typeIndex = schemaKeys.type.indexOf(validatedType);\n\n            if (typeIndex > -1) {\n                schemaKeys.type.splice(typeIndex, 1);\n            }\n        }\n    }\n\n    if (schemaKeys.type && !schemaKeys.type.length) {\n        this.code('else {');\n        this.error('type');\n        this.code('}');\n    }\n\n    schemaKeys.allType.forEach(function (keyword) {\n        keywords[keyword](context);\n    });\n\n    if (schema.format && this.formats) {\n        format = this.formats[schema.format];\n\n        if (format) {\n            if (typeof format === 'string' || format instanceof RegExp) {\n                this.code('if (!(' + inlineRegex(format) + ').test(' + path + ')) {');\n                this.error('format');\n                this.code('}');\n            }\n            else if (typeof format === 'function') {\n                (scope.formats || (scope.formats = {}))[schema.format] = format;\n                (scope.schemas || (scope.schemas = {}))[schema.format] = schema;\n\n                encodedFormat = encodeStr(schema.format);\n\n                this.code('if (!formats[' + encodedFormat + '](' + path + ', schemas[' + encodedFormat + '])) {');\n                this.error('format');\n                this.code('}');\n            }\n        }\n    }\n};\n\nValidationContext.prototype.compile = function (id) {\n    this.code = func('jsen_compiled' + (id ? '_' + id : ''), 'data', 'path', 'errors');\n    this.generate();\n\n    return this.code.compile(this.scope);\n};\n\nValidationContext.prototype.dispose = function () {\n    for (var key in this) {\n        this[key] = undefined;\n    }\n};\n\nfunction jsen(schema, options) {\n    if (type(schema) !== 'object') {\n        throw new Error(INVALID_SCHEMA);\n    }\n\n    options = options || {};\n\n    var counter = 0,\n        id = function () { return 'i' + (counter++); },\n        resolver = new SchemaResolver(schema, options.schemas, options.missing$Ref || false),\n        context = new ValidationContext({\n            schema: schema,\n            resolver: resolver,\n            id: id,\n            schemas: options.schemas,\n            formats: options.formats,\n            greedy: options.greedy || false\n        }),\n        compiled = func('validate', 'data')\n            ('validate.errors = []')\n            ('gen(data, \"\", validate.errors)')\n            ('return validate.errors.length === 0')\n            .compile({ gen: context.compile() });\n\n    context.dispose();\n    context = null;\n\n    compiled.errors = [];\n\n    compiled.build = function (initial, options) {\n        return build(\n            schema,\n            (options && options.copy === false ? initial : clone(initial)),\n            options && options.additionalProperties,\n            resolver);\n    };\n\n    return compiled;\n}\n\njsen.browser = browser;\njsen.clone = clone;\njsen.equal = equal;\njsen.unique = unique;\njsen.ucs2length = ucs2length;\njsen.SchemaResolver = SchemaResolver;\njsen.resolve = SchemaResolver.resolvePointer;\n\nmodule.exports = jsen;\n","module.exports = require('./lib/jsen.js');","require(\"dotenv\").config();\nvar jsen = require('jsen');\nvar validate = jsen(\n    {\n        type: 'object',\n        minProperties: 4,\n        maxProperties: 4,\n        required: ['accountId', 'fullname', 'country', 'avatar'],\n        properties: {\n            accountId: { type: 'string' },\n            fullname: { type: 'string' },\n            country: { type: 'string' },\n            avatar: { type: 'number' }\n        },\n        additionalProperties: false\n    }\n);\n\nvar runners = [\"001-soccer-player.png\", \"003-runner.png\", \"008-runner-1.png\", \"010-gymnast.png\", \"015-muay-thai.png\", \"016-volleyball-player.png\", \"021-water-polo-1.png\", \"033-wrestler-1.png\", \"046-volleyball.png\"];\n\nfunction leaderboardComponent() {\n    var xhr = new XMLHttpRequest();\n    var runnerz = [];\n    xhr.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === 4) {\n            var res = JSON.parse(this.responseText);\n\n            res.data.forEach(e => {\n                try {\n                    if (validate(JSON.parse(`${e.memo}`))) {\n                        console.log(1);\n                        runnerz.push(JSON.parse(`${e.memo}`));\n                        console.log(runnerz);\n                    }\n                } catch (err) {\n                    console.log(err);\n                }\n            });\n\n            var table = document.getElementById(\"leaderboard\");\n            for (var i = 0; i < runnerz.length; i++) {\n                var row = table.insertRow(0);\n                var cell1 = row.insertCell(0);\n                var cell2 = row.insertCell(1);\n                var cell3 = row.insertCell(2);\n                var cell4 = row.insertCell(3);\n                var cell5 = row.insertCell(4);\n                var cell6 = row.insertCell(5);\n                var cell7 = row.insertCell(6);\n                var cell8 = row.insertCell(7);\n                var cell9 = row.insertCell(8);\n                cell1.innerHTML = `<strong>${runnerz.length - i}</strong>`;\n                cell2.innerHTML = `<img src=\"${runners[runnerz[i].avatar]}\" alt=\"\" width=\"50px\">`;\n                cell3.innerHTML = runnerz[i].fullname;\n                cell4.innerHTML = `<span class=\"flag-icon flag-icon-${runnerz[i].country}\"></span>`;\n                cell5.innerHTML = `<a target=\"_blank\" href=\"https://explorer.kabuto.sh/testnet/id/${runnerz[i].accountId}\">${runnerz[i].accountId}</a>`;\n                cell6.innerHTML = 1000;\n                cell7.innerHTML = 1;\n                cell8.innerHTML = 2;\n                cell9.innerHTML = 1;\n                console.log(`<img src=\"assets/${runners[runnerz[i].avatar]}\" alt=\"\" width=\"75px\">`);\n            }\n        }\n    });\n\n    xhr.open(\"GET\", \"https://api-testnet.dragonglass.me/hedera/api/accounts/0.0.221495/transactions\");\n    xhr.setRequestHeader(\"X-API-KEY\", process.env.DRAGONGLASS_KEY);\n\n    xhr.send();\n}\n\nleaderboardComponent();\n\n"]}